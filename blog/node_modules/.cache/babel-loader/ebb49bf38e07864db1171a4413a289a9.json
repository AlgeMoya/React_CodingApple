{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kjhob\\\\OneDrive\\\\React_codingapple\\\\blog\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let post = '강남 우동 맛집';\n  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동맛집', '파이썬독학']);\n  let [logo, setLogo] = useState('ReactBlog');\n  let [따봉, 따봉변경] = useState(0);\n  let [modal, setModal] = useState(); // UI의 현재 상태를 state로 저장\n  // 변수와 state의 차이는 변경 시 자동 재렌더링\n  // 아무데나 쓰지 말고! 변경이 잦은 곳에 권장. 변경이 뜸하다면 비추.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'red',\n          fontSize: '16px'\n        },\n        children: \"ReactBlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copy = [...글제목];\n        copy.sort();\n        글제목변경(copy);\n      },\n      children: \"\\uAC00\\uB098\\uB2E4\\uC21C\\uC815\\uB82C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // state가 array/object면 독립적 카피본을 만들어서 수정해야 함\n        let copy = [...글제목]; // 새로운 좌표로 통째로 복사해서 대입한다. 가리키는 좌표가 바뀐다.\n\n        copy[0] = '여자 코트 추천';\n        글제목변경(copy); // 새로운 좌표이므로 기존 좌표와 다르기 때문에 대입이 잘 된다.\n      },\n      children: \"\\uAE00\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [글제목[0], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            따봉변경(따봉++);\n          },\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this), \" \", 따봉, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: 글제목[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: 글제목[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n} // 컴포넌트 예시 2\n\n\n_s(App, \"W1EFZXxzQgXjbL/YRG4CrMTZPQw=\");\n\n_c = App;\n\nconst Modal2 = () => {\n  // const는 에러메시지로 실수 방지 용이\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}; // 컴포넌트: 반복적인 html 축약할 때, 큰 페이지(전환 필요할 때), 자주 변경되는 것들\n// 걍 함수 쓰는 용도랑 똑같다고 봐도 됨\n// 장점: 코드가 덜 지저분함, 컴포넌트 내부 구조만 알면 대충 컴포넌트가 들어가는 곳의 레이아웃 파악 가능\n// 단점: state 가져다 쓰기 어려움\n\n\n_c2 = Modal2;\n\nfunction Modal() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Modal;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal2\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"names":["logo","useState","App","post","글제목","글제목변경","setLogo","따봉","따봉변경","modal","setModal","color","fontSize","copy","sort","Modal2","Modal"],"sources":["C:/Users/kjhob/OneDrive/React_codingapple/blog/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  let post = '강남 우동 맛집';\n  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동맛집', '파이썬독학']); \n  let [logo, setLogo] = useState('ReactBlog'); \n  let [따봉, 따봉변경] = useState(0);\n  let [modal, setModal] = useState(); // UI의 현재 상태를 state로 저장\n  // 변수와 state의 차이는 변경 시 자동 재렌더링\n  // 아무데나 쓰지 말고! 변경이 잦은 곳에 권장. 변경이 뜸하다면 비추.\n\n  return (\n    <div className=\"App\">\n      <div className='black-nav'>\n        <h4 style={ {color : 'red', fontSize: '16px'} }>ReactBlog</h4>\n      </div>\n \n      <button onClick={ () => {\n        let copy = [...글제목];\n        copy.sort();\n        글제목변경(copy);\n      }}>가나다순정렬</button>\n\n      <button onClick={ () => { // state가 array/object면 독립적 카피본을 만들어서 수정해야 함\n        let copy = [...글제목]; // 새로운 좌표로 통째로 복사해서 대입한다. 가리키는 좌표가 바뀐다.\n        copy[0] = '여자 코트 추천';\n        글제목변경(copy); // 새로운 좌표이므로 기존 좌표와 다르기 때문에 대입이 잘 된다.\n        }}>글수정</button>\n\n      <div className='list'>\n        <h4>{ 글제목[0] } <span onClick={ () => { 따봉변경(따봉++) }}>👍</span> { 따봉 } </h4>\n        <p>2월 17일 발행</p>\n      </div>\n      <div className='list'>\n        <h4>{ 글제목[1] }</h4>\n        <p>2월 17일 발행</p>\n      </div>\n      <div className='list'>\n        <h4>{ 글제목[2] }</h4>\n        <p>2월 17일 발행</p>\n      </div>\n\n      <Modal></Modal>\n    </div>\n  );\n}\n\n// 컴포넌트 예시 2\nconst Modal2 = () => { // const는 에러메시지로 실수 방지 용이\n  return (\n    <div></div>\n  )\n}\n\n// 컴포넌트: 반복적인 html 축약할 때, 큰 페이지(전환 필요할 때), 자주 변경되는 것들\n// 걍 함수 쓰는 용도랑 똑같다고 봐도 됨\n// 장점: 코드가 덜 지저분함, 컴포넌트 내부 구조만 알면 대충 컴포넌트가 들어가는 곳의 레이아웃 파악 가능\n// 단점: state 가져다 쓰기 어려움\nfunction Modal() {\n  return (\n    <div className='modal'>\n        <h4>제목</h4>\n        <p>날짜</p>\n        <p>상세내용</p>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}